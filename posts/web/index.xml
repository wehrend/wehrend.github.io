<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bits &amp; pieces - Sven Wehrend</title>
    <link>http://wehrend.uber.space/posts/web/</link>
    <description>Recent content on Bits &amp; pieces - Sven Wehrend</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sun, 16 Mar 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://wehrend.uber.space/posts/web/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Move Hugo Web-presence to GH-Pages</title>
      <link>http://wehrend.uber.space/posts/web/30_hugo_move_to_gh_pages/</link>
      <pubDate>Sun, 16 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/web/30_hugo_move_to_gh_pages/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Hi there, a few months ago I decided, I would want to go to a form of webspace where I dont have to spend money. Although its only a few bucks, I thought it would be time to move on…​So this is basically a tutorial to move over to github pages…​&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;We start with the Makefile. My new setup looks like the following:&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;listingblock&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Makefile&#34; data-lang=&#34;Makefile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;include&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;credentials.mk&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;build_dir &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; wehrend.github.io&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;up&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;hugo serve --disableFastRender --renderStaticToDisk --ignoreCache --config ./content/config.toml&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;deployment&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;@echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Building site...&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;hugo -D -d &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;build_dir&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt; --config ./content/config.toml&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;@echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Changing directory to output folder...&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;@cd &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;build_dir&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -n &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$$&lt;span style=&#34;color:#e6db74&#34;&gt;(git status --porcelain)&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;&#x9;&#x9;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Adding changes...&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;&#x9;&#x9;git add .; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;&#x9;&#x9;read -p &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Enter commit message: &amp;#34;&lt;/span&gt; COMMIT_MSG; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;&#x9;&#x9;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Committing changes...&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;&#x9;&#x9;git commit -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$$&lt;span style=&#34;color:#e6db74&#34;&gt;COMMIT_MSG&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;&#x9;&#x9;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Pushing to GitHub via SSH with credentials...&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;&#x9;&#x9;GIT_SSH_COMMAND&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sshpass -p &lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;SSH_PASS&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; ssh&amp;#34;&lt;/span&gt; git push git@github.com:wehrend/hugo_blog.git main; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;&#x9;&#x9;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;No changes to commit.&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cleanup&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;@echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Cleaning up...&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;rm -rf ./wehrend.github.io&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;@echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Cleanup complete.&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Modify the Odoo Frontend</title>
      <link>http://wehrend.uber.space/posts/web/29_odoo_with_frontend/</link>
      <pubDate>Wed, 26 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/web/29_odoo_with_frontend/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Today, I want to show you how you can modify your Odoo frontend, I wont go to deep into owl and&#xA;instead just show the basic steps for implementing modifications and changes via HTML5, CSS und javascript.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Lets dive in and wet the toes.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;We begin by writing a short cut-through css file to change and modify the view&#xA;(in my example case here removing carets on the provisioning reports) but feel free to change any other element (or attribute)&#xA;you want&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Setup your python based backend system on Debian Bullseye</title>
      <link>http://wehrend.uber.space/posts/web/28_setup_your_python_based_project/</link>
      <pubDate>Sun, 19 Jan 2025 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/web/28_setup_your_python_based_project/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Here I wanted to document how to setup a python based backend (here: Odoo, but it could also be for example Django) on a pristine Debian / Ubuntu on&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;After a new installation of Debian / Ubuntu you need to install a couple of packages to start of with a usable system, we&#xA;add the following packages via apt-get:&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;literalblock&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;pre&gt;sudo apt-get install chromium, git, qdirstat, make, build-essential, python3&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;(Qdirstat is not needed always needed but sometimes helpful to have for a shell equivalent you can also use / install ncdu instead.)&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Compiling Kicad on Debian Bullseye</title>
      <link>http://wehrend.uber.space/posts/web/27_compiling_kicad_on_debian_bullseye/</link>
      <pubDate>Sun, 10 Mar 2024 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/web/27_compiling_kicad_on_debian_bullseye/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;With my new hobby, there came the desire to learn to build and design my own PCB. With that in mind, I began to use the&#xA;open source ecad solution Kicad. Now I became interested in participating in this project, but, to compile the code you&#xA;have endure a few challenges - you know, collecting the dependencies,installing them, choose the right branch whiche compiles down&#xA;and so on. Here I want to show you my experience with that.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>FPGA 101: Get the Nandland Go board ready on Debian Bullseye</title>
      <link>http://wehrend.uber.space/posts/web/26_get_the_nandlab_go_board_ready_on_debian/</link>
      <pubDate>Sun, 10 Mar 2024 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/web/26_get_the_nandlab_go_board_ready_on_debian/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Hi there,&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;finally this week the &lt;a href=&#34;https://nandland.com/the-go-board/&#34;&gt;nandland go board&lt;/a&gt; I ordered from the developer Russell Merrick a month ago arrived.&#xA;It took a detour due to some shipping problems, but this is not about that, so.&#xA;I had to face quite a few obstacles to get this running on my Debian Bullseye.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;sect1&#34;&gt;&#xA;&lt;h2 id=&#34;_serial_connection_via_usb&#34;&gt;Serial Connection via USB&lt;/h2&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;First of all, to connect&#xA;to the board via FTDI usb as suggested on Debian Bullseye you have to first add your user to the group&#xA;&amp;#39;dialout&amp;#39;, this is done like below:&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>A favorite hobby of mine: Lustiges Taschenbuch Nr. 162</title>
      <link>http://wehrend.uber.space/posts/web/ltb162/25_ltb162/</link>
      <pubDate>Sat, 20 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/web/ltb162/25_ltb162/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;It is about time, to share another favorite of mine with you, and this is duckburg and the duck universe.&#xA;I take the LTB (Lustiges Taschenbuch) Nr. 162 as an example from the golden era of the comic series &amp;#34;Lustiges&#xA;Taschenbuch&amp;#34;&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;../title.jpg&#34; alt=&#34;Title&#34;/&gt;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;../content.jpg&#34; alt=&#34;ToC&#34;/&gt;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;sect1&#34;&gt;&#xA;&lt;h2 id=&#34;_der_goldene_totempfahl_the_golden_totem_pole&#34;&gt;Der goldene Totempfahl (The golden totem pole)&lt;/h2&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;In the story &amp;#34;Der goldene Totempfahl&amp;#34; english the golden totem pole, uncle scrooge is making a movie about his life,&#xA;the story plays in the county of Dawson, where they are getting lost after a storm, they meet the indianer &amp;#34;großer Elch&amp;#34;&#xA;english &amp;#34;big moose&amp;#34; and are searching for the gold nuggets big moose saved for uncle scrooge back in time.&#xA;The movie ends with big moose ending as a movie star.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>FPGA 101: DE10-nano board: Hello World</title>
      <link>http://wehrend.uber.space/posts/web/24_fpga_beginners_3/</link>
      <pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/web/24_fpga_beginners_3/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Today I want to show you, how to connect to the DE10-nano board, the successor of the DE0-nano board. It is a bit bigger, costs nearly 300 bucks,&#xA;but also supports Linux out-of-the-box. There is an &lt;a href=&#34;https://web.archive.org/web/20200815133137/http://angstrom-distribution.org/&#34;&gt;Angstrom Linux&lt;/a&gt; installed on the SD-card.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;To connect to the board via the UART interface, power-up the board with the wall-wart,enter the sd-card to start the linux booting, and finally connect the micro-b usb cable (like shown below) with the PC.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>FPGA 101: Starting with Quartus and Verilog</title>
      <link>http://wehrend.uber.space/posts/web/23_fpga_beginners_2/</link>
      <pubDate>Mon, 25 Dec 2023 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/web/23_fpga_beginners_2/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;So, you decided you want to learn fpga programming and have done the prerequisite from the &lt;a href=&#34;https://wehrend.uber.space/posts/web/21_fpga_beginners/&#34;&gt;introduction 0&lt;/a&gt; as&#xA;well as done the &lt;a href=&#34;https://wehrend.uber.space/posts/web/23_fpga_beginners_1/&#34;&gt;simple logic circuit&lt;/a&gt; via quartus’s bdf files.&#xA;Today we want to show you how to figure out Quartus by doing another hardware equivalent of the hello-World program used in the software world - we do program&#xA;a binary counter showing of by the LED array we have available on our DE0-nano board.&#xA;For this we will make use of both the Block Diagram Files (bdf) from Quartus and the popular HDL (Hardware Description Language) Verilog.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>FPGA 101: Starting with Quartus</title>
      <link>http://wehrend.uber.space/posts/web/22_fpga_beginners_1/</link>
      <pubDate>Sat, 23 Dec 2023 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/web/22_fpga_beginners_1/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;So, you decided you want to learn fpga programming and have done the prerequisite from the &lt;a href=&#34;https://wehrend.uber.space/posts/web/21_fpga_beginners/&#34;&gt;last blog post&lt;/a&gt;.&#xA;Today we want to show you how to figure out Quartus by doing a hardware equivalent of the hello-World program used in the software world - we call it AndGate&#xA;because it is simply that - an and gate feed by to push-buttons as input and a status-LED as output. This way we will make use of the Block Diagram Files (bdf) from Quartus.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>FPGA 101: Starting with HDLS</title>
      <link>http://wehrend.uber.space/posts/web/21_fpga_beginners_0/</link>
      <pubDate>Sun, 03 Dec 2023 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/web/21_fpga_beginners_0/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Today I want to start a blog post series about hardware programming. We start with an introduction&#xA;to hardware programming with the FPGA-board &lt;a href=&#34;https://www.terasic.com.tw/cgi-bin/page/archive.pl?Language=English&amp;amp;No=593&#34;&gt;DE0 Nano&lt;/a&gt;&#xA;from former Altera now Intel. You see a picture of the small board below. It seems you can still order this board, but I have not tested.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;../de0nano.jpg&#34; alt=&#34;DE-0 nano&#34;/&gt;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;We will show how to setup the environment, in the first step we will (show how to) download and install quartus on a Debian distribution, and configure&#xA;the programmer. In the second step we will install the simulation software Modelsim.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Reducing Rare Earth Dependence: The Quest for Alternative Magnetic Materials</title>
      <link>http://wehrend.uber.space/posts/web/20_reducing_rare_earth_elements/</link>
      <pubDate>Fri, 03 Nov 2023 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/web/20_reducing_rare_earth_elements/</guid>
      <description>&lt;div class=&#34;sect2&#34;&gt;&#xA;&lt;h3 id=&#34;_introduction&#34;&gt;Introduction&lt;/h3&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Rare earth elements have long been the backbone of high-tech magnets, with metals like neodymium and dysprosium playing&#xA;pivotal roles in various industries. However, the scarcity and rising demand for these valuable resources have prompted&#xA;researchers to seek alternative solutions. In an effort to reduce our reliance on rare earth magnets, scientists are&#xA;exploring innovative materials and alloy combinations.&#xA;Among the promising contenders is cerium, an abundant and accessible rare earth element, showing potential to replace&#xA;or augment neodymium magnets. In this article, we’ll delve into the groundbreaking research by Thomas Lograsso and his&#xA;team at the Ames Laboratory of the US Department of Energy.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Unlocking the Secrets of Rare Earth Elements: The Remarkable Case of Neodymium</title>
      <link>http://wehrend.uber.space/posts/web/19_rare_earth_elements/</link>
      <pubDate>Fri, 03 Nov 2023 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/web/19_rare_earth_elements/</guid>
      <description>&lt;div class=&#34;sect2&#34;&gt;&#xA;&lt;h3 id=&#34;_introduction&#34;&gt;Introduction&lt;/h3&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Rare earth elements, often shrouded in mystery, play a crucial role in our modern world. From smartphones&#xA;to electric vehicles, renewable energy technologies, and even defense systems, these elements are the unsung&#xA;heroes that make our daily lives more sustainable, efficient, and connected. In this article, we’ll delve&#xA;into the fascinating world of rare earth elements, with a focus on the versatile element, neodymium.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;sect2&#34;&gt;&#xA;&lt;h3 id=&#34;_the_rare_earth_elements_an_overview&#34;&gt;The Rare Earth Elements: An Overview&lt;/h3&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Rare earth elements (REEs) are a group of seventeen chemical elements that occupy the lanthanide series of the periodic&#xA;table, along with scandium and yttrium. Despite the name, they are not necessarily rare, but they are typically found in&#xA;low concentrations, making their extraction and purification challenging and costly.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Op-Amps introduction</title>
      <link>http://wehrend.uber.space/posts/web/18_op-amps_introduction/</link>
      <pubDate>Sat, 14 Oct 2023 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/web/18_op-amps_introduction/</guid>
      <description>&lt;div class=&#34;sect1&#34;&gt;&#xA;&lt;h2 id=&#34;_op_amp&#34;&gt;OP-Amp&lt;/h2&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Today I want to speak about op-amps. These wonderful, but mysterious components, we have heavely often appearing&#xA;in circuit schematica of analog or analog / digital hybrid circuits. We want to demistify these components.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;../op-amp.svg&#34; alt=&#34;op-amp&#34; width=&#34;400px&#34;/&gt;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;There are two basic thumb rules when handling ideal op-amp circuit. (Real-world op-amp circuits are a bit more complicated, but we will discuss this later).&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph image&#34;&gt;&#xA;&lt;div class=&#34;title&#34;&gt;1. The first thumb rule is that Vout is essentially the difference of the voltage values at the both inputs, multiplied with an arbitrary but high amplification factor A.&lt;/div&gt;</description>
    </item>
    <item>
      <title>Analog Computers 101</title>
      <link>http://wehrend.uber.space/posts/web/17_analog_computers_101/</link>
      <pubDate>Sun, 24 Sep 2023 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/web/17_analog_computers_101/</guid>
      <description>&lt;div class=&#34;sect1&#34;&gt;&#xA;&lt;h2 id=&#34;_analog_computers&#34;&gt;Analog Computers&lt;/h2&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Today I want to speak about analog computers. In todays times analog computers are leading a shadowy existence,&#xA;compared to their digital counterparts. But they are wonderous little machines. And that machines I mean&#xA;wordly because there exists analog mechanical computers that are models from the world and used to&#xA;&lt;a href=&#34;https://en.wikipedia.org/wiki/Tide-predicting_machine&#34;&gt;compute and predict tides&lt;/a&gt; in certain areas of the world .&#xA;Also the brain is an enourmous analog computer with a comparatively very small&#xA;enery budget. &lt;a href=&#34;https://press.princeton.edu/ideas/is-the-human-brain-a-biological-computer&#34;&gt;It only takes 12 Watt.&lt;/a&gt;&#xA;12 Watt; that is not even a quarter of the power supply budget of a laptop, which uses 65 Watt.&#xA;And you can do very heavy lifting with the brain, but back to topic.&#xA;I want to talk mainly about analog electronic computers, during the world war two those were used to compute&#xA;&lt;a href=&#34;https://web.eecs.utk.edu/~bmaclenn/Classes/494-UC/handouts/LNUC-V.pdf&#34;&gt;ballistic curves&lt;/a&gt;.&#xA;So analog computers can sum up, multiply, divide, integrate and differentiate like their digital&#xA;counterparts.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Caches and Caching</title>
      <link>http://wehrend.uber.space/posts/web/12_caches_and_caching/</link>
      <pubDate>Sat, 10 Jun 2023 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/web/12_caches_and_caching/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;When you fire up your browser to visit a website, you most probably did not noticed a very&#xA;important mechanism underlying the browser and working in the background. Caching.&#xA;Caches are used everywhere to optimize and improve access times and such in consequence&#xA;the overall performance (of a site). Caching in the browser for example means, that&#xA;ideally only the portions of the website that changed are loaded from the www. All else&#xA;was already loaded before and did not change, thus needs no reload. Portions that are no longer&#xA;up-to-date become invalidated (also known as cache-invalidation) and are loaded anew from the source.&#xA;There are two types of very different caches in the computer&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Topics to write about - Wishlist</title>
      <link>http://wehrend.uber.space/posts/web/10_wishlist/</link>
      <pubDate>Sun, 21 May 2023 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/web/10_wishlist/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;This is a small, incomplete list of topics I’d like to write about in the mid- to far future.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;ulist&#34;&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Caches&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Interrupts&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Out-of-Order execution&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;RAW, WAR and WAW conflicts&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Filters (analog and digital)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Analog computers&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;neuronal networks&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;the macrobiom&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Religion vs. spirituality - why I prefer the latter</title>
      <link>http://wehrend.uber.space/posts/web/08_religion_spirituality/</link>
      <pubDate>Thu, 18 May 2023 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/web/08_religion_spirituality/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;What I have learned about religions and spirituality over the last years and decades boils down to one&#xA;simple statement: Religion is about right and wrong and old, outdated dogmas, while spirituality&#xA;simply says &amp;#34;It is how it is&amp;#34;. For spirituality, there is no right or wrong, only the single moment in the present&#xA;in which we dwell. I find this viewpoint quite amazing. From what I found, it leads to a more awakened state.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Why are serial interfaces everywhere - instead of parallel ones</title>
      <link>http://wehrend.uber.space/posts/web/07_serial_interfaces/</link>
      <pubDate>Thu, 18 May 2023 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/web/07_serial_interfaces/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;USB, SPI, I²C, Sata - all these interfaces is common that they are serial interfaces. Serial interfaces are todays common.&#xA;But why is that the case, especially for high-speed communication? it sounds simply counterintuitive: Parallel wires&#xA;can theoretically send more bits per time than on singular wire can.&#xA;The answer to that question is complex and multilayered. There are multiple different reasons why&#xA;serial interfaces are preferred over parallel interfaces. Lets start with the obvious ones:&#xA;The PCB routing of busses of  8, 16, 32 or even 64 bit width gets increasingly complex to route on printed circuits&#xA;boards (PCBs).The second problem, related to this, is that signal slope need to get transmitted at the same time&#xA;for all parallel lines (wires), which results in a more complex routing since edges in the strip conductor needs to be compensated.&#xA;Simply put the additional logic implemented in chips to convert the serial signal to parallel ones again (deserializer) and vice versa&#xA;(serializer) is much cheaper than the costs of complex routings.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Odoo hacks: Remove Lock-Button from Odoo v12</title>
      <link>http://wehrend.uber.space/posts/web/04_odoo_hacks/</link>
      <pubDate>Sat, 22 Apr 2023 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/web/04_odoo_hacks/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Today I want to introduce a solution for a usability-problem I had in Odoo recently.&#xA;In Odoo 12 there is a lock button next to the edit / save button, and you have to click&#xA;both to (1) unlock the page and (2) make it editable. This should be done in one&#xA;step, effectively removing the locking mechanism used in the Delivery Orders (class StockPicking)&#xA;and Manufacturing Orders (class MrpProduction). The solution requires an xml and a javascript-file&#xA;as well as a dedicated web-controller. The soliution is presented below.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Separating blog and content</title>
      <link>http://wehrend.uber.space/posts/web/03_separate_form_and_content/</link>
      <pubDate>Sat, 04 Feb 2023 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/web/03_separate_form_and_content/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;As the blog grow bigger and after the move to odoo, I noticed a gap in the workflow,since&#xA;a blog and its content itself are different entities, I wanted to handle them as such,&#xA;that led me to a cleanup of the original source code for blog, where I moved teh content folder&#xA;into a different repo, called hugo_content, the former repo I called hugo_blog.&#xA;---&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;In my case, this means you have to clone the repo hugo_blog first&#xA;go inside the new directory (cd hugo ), checkout its branch &amp;#39;hugo&amp;#39; and then do a clone of&#xA;the repo hugo_content.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Moving to Hugo</title>
      <link>http://wehrend.uber.space/posts/web/02_moving-to-hugo/</link>
      <pubDate>Fri, 15 Apr 2022 12:17:41 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/web/02_moving-to-hugo/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Since one week my blog is build on the static-site-generator &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;.&#xA;I wanted to move to Hugo far earlier, due to the wide variety of themes.&#xA;However this required the move from Asciidoc to &lt;a href=&#34;https://asciidoctor.org/&#34;&gt;Asciidoctor&lt;/a&gt;,&#xA;and I experienced a few problems with the integration of Asciidoctor into my existing workflow.&#xA;As the approach of rendering the latex-equations in the asciidoc-documents&#xA;no longer worked, I decided to move on to client-based rendering of formulas,&#xA;like done in &lt;a href=&#34;https://gohugo.io/Katex&#34;&gt;KaTex&lt;/a&gt; and &lt;a href=&#34;https://www.mathjax.org/&#34;&gt;Mathjax&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Setting up a static blog with Nikola</title>
      <link>http://wehrend.uber.space/posts/web/00_setting_up_nikola/</link>
      <pubDate>Sat, 12 Dec 2020 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/web/00_setting_up_nikola/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;I picked up Nikola some months ago as I was searching for a simple static-site-generator to setup a blog with minimal effort.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;To make things a bit more interesting and at the same time easier we will use Nikola in a Docker container.&#xA;So I require an almost basic understanding for Docker here.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;First create a directory on our host system, where you want the files stored, e.g. &amp;#39;blog&amp;#39; in your home directory.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Writing about math with Asciidoc</title>
      <link>http://wehrend.uber.space/posts/web/01_writing-about-math-with-asciidoc/</link>
      <pubDate>Sat, 12 Dec 2020 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/web/01_writing-about-math-with-asciidoc/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;While drafting a blog post, part of a series of posts intended to be published in the future,&#xA;I discovered a lack of my tooling in Nikola. When adding mathematical formulas,&#xA;I realized that there is no default-way of rendering images from those math formulas,&#xA;and inserting them as image-tags into the html. Instead math formulas are handled via JS, which I try&#xA;to reduce to an absolute minimum on my site.&#xA;So I started to implement a rather quick-and-dirty plugin to do exactly this transformation, using&#xA;latex and dvipng or dvisvgm.&#xA;Then I come across &lt;a href=&#34;https://erikwinter.nl/articles/2020/why-i-built-my-own-shitty-static-site-generator/&#34;&gt;this blog post&lt;/a&gt;&#xA;where reading about &lt;a href=&#34;https://asciidoc.org/&#34;&gt;asciidoc&lt;/a&gt; written in python and its successor &lt;a href=&#34;https://asciidoctor.org/&#34;&gt;asciidoctor&lt;/a&gt; written&#xA;in ruby supporting different display formats. Ideal for the content I had in mind. So I installed the Nikola plugin asciidoc&#xA;(which is mostly a wrapper to the asciidoc binary called as a subprocess), via&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
  </channel>
</rss>
