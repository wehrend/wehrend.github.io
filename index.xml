<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Agenda on Bits &amp; pieces - Sven Wehrend</title>
    <link>http://wehrend.uber.space/</link>
    <description>Recent content in Agenda on Bits &amp; pieces - Sven Wehrend</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sun, 16 Mar 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://wehrend.uber.space/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Move Hugo Web-presence to GH-Pages</title>
      <link>http://wehrend.uber.space/posts/web/30_hugo_move_to_gh_pages/</link>
      <pubDate>Sun, 16 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/web/30_hugo_move_to_gh_pages/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Hi there, a few months ago I decided, I would want to go to a form of webspace where I dont have to spend money. Although its only a few bucks, I thought it would be time to move on…​So this is basically a tutorial to move over to github pages…​&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;We start with the Makefile. My new setup looks like the following:&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;listingblock&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Makefile&#34; data-lang=&#34;Makefile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;include&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;credentials.mk&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;build_dir &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; wehrend.github.io&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;up&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;hugo serve --disableFastRender --renderStaticToDisk --ignoreCache --config ./content/config.toml&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;deployment&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;@echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Building site...&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;hugo -D -d &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;build_dir&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt; --config ./content/config.toml&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;@echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Changing directory to output folder...&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;@cd &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;build_dir&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -n &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$$&lt;span style=&#34;color:#e6db74&#34;&gt;(git status --porcelain)&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;&#x9;&#x9;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Adding changes...&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;&#x9;&#x9;git add .; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;&#x9;&#x9;read -p &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Enter commit message: &amp;#34;&lt;/span&gt; COMMIT_MSG; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;&#x9;&#x9;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Committing changes...&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;&#x9;&#x9;git commit -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$$&lt;span style=&#34;color:#e6db74&#34;&gt;COMMIT_MSG&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;&#x9;&#x9;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Pushing to GitHub via SSH with credentials...&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;&#x9;&#x9;GIT_SSH_COMMAND&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sshpass -p &lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;SSH_PASS&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; ssh&amp;#34;&lt;/span&gt; git push git@github.com:wehrend/hugo_blog.git main; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;&#x9;&#x9;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;No changes to commit.&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cleanup&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;@echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Cleaning up...&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;rm -rf ./wehrend.github.io&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;@echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Cleanup complete.&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Modify the Odoo Frontend</title>
      <link>http://wehrend.uber.space/posts/web/29_odoo_with_frontend/</link>
      <pubDate>Wed, 26 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/web/29_odoo_with_frontend/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Today, I want to show you how you can modify your Odoo frontend, I wont go to deep into owl and&#xA;instead just show the basic steps for implementing modifications and changes via HTML5, CSS und javascript.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Lets dive in and wet the toes.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;We begin by writing a short cut-through css file to change and modify the view&#xA;(in my example case here removing carets on the provisioning reports) but feel free to change any other element (or attribute)&#xA;you want&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Setup your python based backend system on Debian Bullseye</title>
      <link>http://wehrend.uber.space/posts/web/28_setup_your_python_based_project/</link>
      <pubDate>Sun, 19 Jan 2025 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/web/28_setup_your_python_based_project/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Here I wanted to document how to setup a python based backend (here: Odoo, but it could also be for example Django) on a pristine Debian / Ubuntu on&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;After a new installation of Debian / Ubuntu you need to install a couple of packages to start of with a usable system, we&#xA;add the following packages via apt-get:&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;literalblock&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;pre&gt;sudo apt-get install chromium, git, qdirstat, make, build-essential, python3&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;(Qdirstat is not needed always needed but sometimes helpful to have for a shell equivalent you can also use / install ncdu instead.)&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Compiling Kicad on Debian Bullseye</title>
      <link>http://wehrend.uber.space/posts/web/27_compiling_kicad_on_debian_bullseye/</link>
      <pubDate>Sun, 10 Mar 2024 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/web/27_compiling_kicad_on_debian_bullseye/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;With my new hobby, there came the desire to learn to build and design my own PCB. With that in mind, I began to use the&#xA;open source ecad solution Kicad. Now I became interested in participating in this project, but, to compile the code you&#xA;have endure a few challenges - you know, collecting the dependencies,installing them, choose the right branch whiche compiles down&#xA;and so on. Here I want to show you my experience with that.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>FPGA 101: Get the Nandland Go board ready on Debian Bullseye</title>
      <link>http://wehrend.uber.space/posts/web/26_get_the_nandlab_go_board_ready_on_debian/</link>
      <pubDate>Sun, 10 Mar 2024 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/web/26_get_the_nandlab_go_board_ready_on_debian/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Hi there,&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;finally this week the &lt;a href=&#34;https://nandland.com/the-go-board/&#34;&gt;nandland go board&lt;/a&gt; I ordered from the developer Russell Merrick a month ago arrived.&#xA;It took a detour due to some shipping problems, but this is not about that, so.&#xA;I had to face quite a few obstacles to get this running on my Debian Bullseye.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;sect1&#34;&gt;&#xA;&lt;h2 id=&#34;_serial_connection_via_usb&#34;&gt;Serial Connection via USB&lt;/h2&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;First of all, to connect&#xA;to the board via FTDI usb as suggested on Debian Bullseye you have to first add your user to the group&#xA;&amp;#39;dialout&amp;#39;, this is done like below:&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Build your own synthesizer modules</title>
      <link>http://wehrend.uber.space/posts/synth/25_build_your_own_modules/</link>
      <pubDate>Wed, 06 Mar 2024 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/synth/25_build_your_own_modules/</guid>
      <description>&lt;div class=&#34;sect1&#34;&gt;&#xA;&lt;h2 id=&#34;_introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Hi,&#xA;today I want to share with you the basic knowledge of DIYing your own synthesizer modules - those do not need of the eurorack standard although in my case they are.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;If you get started with &lt;a href=&#34;https://sdiy.info/wiki/Eurorack&#34;&gt;eurorack format&lt;/a&gt; or any other modular like synth standard, but especially the eurorack standard - you will be most likely overwhelmed about&#xA;the sheer number of manufacturers and available. You can have a simple look here on &lt;a href=&#34;https://www.modulargrid.net/e/modules/browser&#34;&gt;ModularGrid&lt;/a&gt;.&#xA;You need a few weeks or even months, spending time reading some test articles on &lt;a href=&#34;https://www.amazona.de/&#34;&gt;Amzona.de&lt;/a&gt; , or visiting Synthesizer Stores like&#xA;&lt;a href=&#34;https://schneidersladen.de/&#34;&gt;SchneidersLaden&lt;/a&gt; to get a rough idea of the diversity of the market.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>A favorite hobby of mine: Lustiges Taschenbuch Nr. 162</title>
      <link>http://wehrend.uber.space/posts/web/ltb162/25_ltb162/</link>
      <pubDate>Sat, 20 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/web/ltb162/25_ltb162/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;It is about time, to share another favorite of mine with you, and this is duckburg and the duck universe.&#xA;I take the LTB (Lustiges Taschenbuch) Nr. 162 as an example from the golden era of the comic series &amp;#34;Lustiges&#xA;Taschenbuch&amp;#34;&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;../title.jpg&#34; alt=&#34;Title&#34;/&gt;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;../content.jpg&#34; alt=&#34;ToC&#34;/&gt;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;sect1&#34;&gt;&#xA;&lt;h2 id=&#34;_der_goldene_totempfahl_the_golden_totem_pole&#34;&gt;Der goldene Totempfahl (The golden totem pole)&lt;/h2&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;In the story &amp;#34;Der goldene Totempfahl&amp;#34; english the golden totem pole, uncle scrooge is making a movie about his life,&#xA;the story plays in the county of Dawson, where they are getting lost after a storm, they meet the indianer &amp;#34;großer Elch&amp;#34;&#xA;english &amp;#34;big moose&amp;#34; and are searching for the gold nuggets big moose saved for uncle scrooge back in time.&#xA;The movie ends with big moose ending as a movie star.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>FPGA 101: DE10-nano board: Hello World</title>
      <link>http://wehrend.uber.space/posts/web/24_fpga_beginners_3/</link>
      <pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/web/24_fpga_beginners_3/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Today I want to show you, how to connect to the DE10-nano board, the successor of the DE0-nano board. It is a bit bigger, costs nearly 300 bucks,&#xA;but also supports Linux out-of-the-box. There is an &lt;a href=&#34;https://web.archive.org/web/20200815133137/http://angstrom-distribution.org/&#34;&gt;Angstrom Linux&lt;/a&gt; installed on the SD-card.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;To connect to the board via the UART interface, power-up the board with the wall-wart,enter the sd-card to start the linux booting, and finally connect the micro-b usb cable (like shown below) with the PC.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>FPGA 101: Starting with Quartus and Verilog</title>
      <link>http://wehrend.uber.space/posts/web/23_fpga_beginners_2/</link>
      <pubDate>Mon, 25 Dec 2023 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/web/23_fpga_beginners_2/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;So, you decided you want to learn fpga programming and have done the prerequisite from the &lt;a href=&#34;https://wehrend.uber.space/posts/web/21_fpga_beginners/&#34;&gt;introduction 0&lt;/a&gt; as&#xA;well as done the &lt;a href=&#34;https://wehrend.uber.space/posts/web/23_fpga_beginners_1/&#34;&gt;simple logic circuit&lt;/a&gt; via quartus’s bdf files.&#xA;Today we want to show you how to figure out Quartus by doing another hardware equivalent of the hello-World program used in the software world - we do program&#xA;a binary counter showing of by the LED array we have available on our DE0-nano board.&#xA;For this we will make use of both the Block Diagram Files (bdf) from Quartus and the popular HDL (Hardware Description Language) Verilog.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>FPGA 101: Starting with Quartus</title>
      <link>http://wehrend.uber.space/posts/web/22_fpga_beginners_1/</link>
      <pubDate>Sat, 23 Dec 2023 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/web/22_fpga_beginners_1/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;So, you decided you want to learn fpga programming and have done the prerequisite from the &lt;a href=&#34;https://wehrend.uber.space/posts/web/21_fpga_beginners/&#34;&gt;last blog post&lt;/a&gt;.&#xA;Today we want to show you how to figure out Quartus by doing a hardware equivalent of the hello-World program used in the software world - we call it AndGate&#xA;because it is simply that - an and gate feed by to push-buttons as input and a status-LED as output. This way we will make use of the Block Diagram Files (bdf) from Quartus.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>FPGA 101: Starting with HDLS</title>
      <link>http://wehrend.uber.space/posts/web/21_fpga_beginners_0/</link>
      <pubDate>Sun, 03 Dec 2023 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/web/21_fpga_beginners_0/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Today I want to start a blog post series about hardware programming. We start with an introduction&#xA;to hardware programming with the FPGA-board &lt;a href=&#34;https://www.terasic.com.tw/cgi-bin/page/archive.pl?Language=English&amp;amp;No=593&#34;&gt;DE0 Nano&lt;/a&gt;&#xA;from former Altera now Intel. You see a picture of the small board below. It seems you can still order this board, but I have not tested.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;../de0nano.jpg&#34; alt=&#34;DE-0 nano&#34;/&gt;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;We will show how to setup the environment, in the first step we will (show how to) download and install quartus on a Debian distribution, and configure&#xA;the programmer. In the second step we will install the simulation software Modelsim.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Reducing Rare Earth Dependence: The Quest for Alternative Magnetic Materials</title>
      <link>http://wehrend.uber.space/posts/web/20_reducing_rare_earth_elements/</link>
      <pubDate>Fri, 03 Nov 2023 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/web/20_reducing_rare_earth_elements/</guid>
      <description>&lt;div class=&#34;sect2&#34;&gt;&#xA;&lt;h3 id=&#34;_introduction&#34;&gt;Introduction&lt;/h3&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Rare earth elements have long been the backbone of high-tech magnets, with metals like neodymium and dysprosium playing&#xA;pivotal roles in various industries. However, the scarcity and rising demand for these valuable resources have prompted&#xA;researchers to seek alternative solutions. In an effort to reduce our reliance on rare earth magnets, scientists are&#xA;exploring innovative materials and alloy combinations.&#xA;Among the promising contenders is cerium, an abundant and accessible rare earth element, showing potential to replace&#xA;or augment neodymium magnets. In this article, we’ll delve into the groundbreaking research by Thomas Lograsso and his&#xA;team at the Ames Laboratory of the US Department of Energy.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Unlocking the Secrets of Rare Earth Elements: The Remarkable Case of Neodymium</title>
      <link>http://wehrend.uber.space/posts/web/19_rare_earth_elements/</link>
      <pubDate>Fri, 03 Nov 2023 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/web/19_rare_earth_elements/</guid>
      <description>&lt;div class=&#34;sect2&#34;&gt;&#xA;&lt;h3 id=&#34;_introduction&#34;&gt;Introduction&lt;/h3&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Rare earth elements, often shrouded in mystery, play a crucial role in our modern world. From smartphones&#xA;to electric vehicles, renewable energy technologies, and even defense systems, these elements are the unsung&#xA;heroes that make our daily lives more sustainable, efficient, and connected. In this article, we’ll delve&#xA;into the fascinating world of rare earth elements, with a focus on the versatile element, neodymium.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;sect2&#34;&gt;&#xA;&lt;h3 id=&#34;_the_rare_earth_elements_an_overview&#34;&gt;The Rare Earth Elements: An Overview&lt;/h3&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Rare earth elements (REEs) are a group of seventeen chemical elements that occupy the lanthanide series of the periodic&#xA;table, along with scandium and yttrium. Despite the name, they are not necessarily rare, but they are typically found in&#xA;low concentrations, making their extraction and purification challenging and costly.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Op-Amps introduction</title>
      <link>http://wehrend.uber.space/posts/web/18_op-amps_introduction/</link>
      <pubDate>Sat, 14 Oct 2023 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/web/18_op-amps_introduction/</guid>
      <description>&lt;div class=&#34;sect1&#34;&gt;&#xA;&lt;h2 id=&#34;_op_amp&#34;&gt;OP-Amp&lt;/h2&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Today I want to speak about op-amps. These wonderful, but mysterious components, we have heavely often appearing&#xA;in circuit schematica of analog or analog / digital hybrid circuits. We want to demistify these components.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;../op-amp.svg&#34; alt=&#34;op-amp&#34; width=&#34;400px&#34;/&gt;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;There are two basic thumb rules when handling ideal op-amp circuit. (Real-world op-amp circuits are a bit more complicated, but we will discuss this later).&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph image&#34;&gt;&#xA;&lt;div class=&#34;title&#34;&gt;1. The first thumb rule is that Vout is essentially the difference of the voltage values at the both inputs, multiplied with an arbitrary but high amplification factor A.&lt;/div&gt;</description>
    </item>
    <item>
      <title>Analog Computers 101</title>
      <link>http://wehrend.uber.space/posts/web/17_analog_computers_101/</link>
      <pubDate>Sun, 24 Sep 2023 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/web/17_analog_computers_101/</guid>
      <description>&lt;div class=&#34;sect1&#34;&gt;&#xA;&lt;h2 id=&#34;_analog_computers&#34;&gt;Analog Computers&lt;/h2&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Today I want to speak about analog computers. In todays times analog computers are leading a shadowy existence,&#xA;compared to their digital counterparts. But they are wonderous little machines. And that machines I mean&#xA;wordly because there exists analog mechanical computers that are models from the world and used to&#xA;&lt;a href=&#34;https://en.wikipedia.org/wiki/Tide-predicting_machine&#34;&gt;compute and predict tides&lt;/a&gt; in certain areas of the world .&#xA;Also the brain is an enourmous analog computer with a comparatively very small&#xA;enery budget. &lt;a href=&#34;https://press.princeton.edu/ideas/is-the-human-brain-a-biological-computer&#34;&gt;It only takes 12 Watt.&lt;/a&gt;&#xA;12 Watt; that is not even a quarter of the power supply budget of a laptop, which uses 65 Watt.&#xA;And you can do very heavy lifting with the brain, but back to topic.&#xA;I want to talk mainly about analog electronic computers, during the world war two those were used to compute&#xA;&lt;a href=&#34;https://web.eecs.utk.edu/~bmaclenn/Classes/494-UC/handouts/LNUC-V.pdf&#34;&gt;ballistic curves&lt;/a&gt;.&#xA;So analog computers can sum up, multiply, divide, integrate and differentiate like their digital&#xA;counterparts.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Eurorack Synthesizer - Noise Floor</title>
      <link>http://wehrend.uber.space/posts/synth/16_noise_floor/</link>
      <pubDate>Sun, 24 Sep 2023 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/synth/16_noise_floor/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;In meinem mobilen Setup, dem NiftyVCase, habe ich meine DIY-Module gesammelt (mit Ausnahme des Doepfer&#xA;A-124, den ich wegen seines großartigen Klangs einbauen musste). Es verfügt über eine Kick-Drum von Erica Synths, einen even VCO, eine Sampling-Modulator, A*B+C und Rampage von Befaco. Sowie den Divebomb III für etwas Delay.&#xA;Zu guter Letzt ein Zlon-Skew-LFO und ein BCM086-Diodenleiter-Hochpassfilter.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;../noise_floor.jpg&#34; alt=&#34;noise floor&#34;/&gt;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Link:../noise_floor.m4a[noise floor Audio]&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Eurorack Synthesizer - Jam Session</title>
      <link>http://wehrend.uber.space/posts/synth/15_jam_session/</link>
      <pubDate>Sat, 22 Jul 2023 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/synth/15_jam_session/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Dieses Mal haben wir einen verschachtelten Patch, der ein neues Mitglied enthält, den Zufallssequenzer&#xA;von rat-king, der, wie der Name schon sagt, schöne zufällige Sequenzen liefert. Außerdem&#xA;haben wir ein neues Mixer-Modul, selbstgebaut.&#xA;Wir verwenden auch beide VCOs und beide LFO-Module…​&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;../jam_session.jpg&#34; alt=&#34;Jam-Session&#34;/&gt;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;a href=&#34;../jam_session.m4a&#34;&gt;Jam-Session Audio&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Eurorack Synthesizer - Another small patch</title>
      <link>http://wehrend.uber.space/posts/synth/14_another_small_patch/</link>
      <pubDate>Sat, 01 Jul 2023 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/synth/14_another_small_patch/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;So here is another small patch idea for the Doepfer A-100 system,&#xA;this time featuring the SEM filter from Oberheim, incarnated in the Doepfer&#xA;modul A-106-5.&#xA;We also utilize two LFO modules…​&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;../lfo_sem_patch.jpg&#34; alt=&#34;LFO SEM Patch&#34;/&gt;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;a href=&#34;../lfo_sem_patch.m4a&#34;&gt;LFO SEM Patch Audio&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;../lfo_sem_patch2-3.jpg&#34; alt=&#34;LFO SEM Patch&#34;/&gt;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;a href=&#34;../lfo_sem_patch2.m4a&#34;&gt;LFO SEM Patch Audio 2&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;a href=&#34;../lfo_sem_patch3.m4a&#34;&gt;LFO SEM Patch Audio 3&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;To this day I did not find the right audio recorder,and I am recording with my smartphone,&#xA;so the sound quality is rather bad. I am still searching for the ideal recording hardware.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Prequel: Introduction to electronics - 102</title>
      <link>http://wehrend.uber.space/pages/short-introduction-to-electronics-102/</link>
      <pubDate>Wed, 21 Jun 2023 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/pages/short-introduction-to-electronics-102/</guid>
      <description>&lt;div class=&#34;sect1&#34;&gt;&#xA;&lt;h2 id=&#34;_time_sensitive_components&#34;&gt;Time-sensitive components&lt;/h2&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;After reviewing and extensively describing the most important component,&#xA;the resistor, in  the first part, now we want to have a look at the next important&#xA;component, the capacitor. Capacitor are also passive components, meaning&#xA;they do not amplify a signal.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;sect2&#34;&gt;&#xA;&lt;h3 id=&#34;_electrostatic_field&#34;&gt;Electrostatic field&lt;/h3&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;If we take two metal planes and park them side by side, with a small thin layer of a non-conducting&#xA;substance in-between, we created an electrostatic field.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Eurorack Synthesizer - Another simple patch</title>
      <link>http://wehrend.uber.space/posts/synth/13_another_simple_patch/</link>
      <pubDate>Fri, 16 Jun 2023 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/synth/13_another_simple_patch/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Hier ist also eine weitere einfache Patch-Idee für das Doepfer A-100-System, diesmal mit dem SEM-Filter von Oberheim, verkörpert im Doepfer Modul A-106-5.&#xA;Wir verwenden auch zwei A-110-Oszillatormodule (ein Standard- und ein Basis-Modul) und den LFO.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;../sem_patch.jpg&#34; alt=&#34;SEM Patch&#34;/&gt;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Link:../sem_patch.m4a[SEM Patch Audio]&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Bis heute habe ich nicht den richtigen Audiorecorder gefunden und nehme mit meinem Smartphone auf,&#xA;sodass die Tonqualität eher schlecht ist. Ich bin immer noch auf der Suche nach der idealen Aufnahmehardware.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Caches and Caching</title>
      <link>http://wehrend.uber.space/posts/web/12_caches_and_caching/</link>
      <pubDate>Sat, 10 Jun 2023 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/web/12_caches_and_caching/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;When you fire up your browser to visit a website, you most probably did not noticed a very&#xA;important mechanism underlying the browser and working in the background. Caching.&#xA;Caches are used everywhere to optimize and improve access times and such in consequence&#xA;the overall performance (of a site). Caching in the browser for example means, that&#xA;ideally only the portions of the website that changed are loaded from the www. All else&#xA;was already loaded before and did not change, thus needs no reload. Portions that are no longer&#xA;up-to-date become invalidated (also known as cache-invalidation) and are loaded anew from the source.&#xA;There are two types of very different caches in the computer&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Eurorack Synthesizer - More patch ideas</title>
      <link>http://wehrend.uber.space/posts/synth/11_more_patch_ideas/</link>
      <pubDate>Sat, 10 Jun 2023 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/synth/11_more_patch_ideas/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Hier ist also eine weitere Patch-Idee für das Doepfer A-100-System.&#xA;Die Ergebnisse der Doepfer-Oszillatoren sind prägnante „knarzig-kernige“ Klänge.&#xA;Wir verwenden zwei A-110-Oszillatormodule (ein Standard- und ein Basic-Modul), einen Ringmodulator (A-114)&#xA;und ein Wespentaille-Filter (A-124) sowie einige Hilfsmodule wie einen Sequenzer und einen LFO.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;../pithily_sounds.jpg&#34; alt=&#34;pithily&#34;/&gt;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;a href=&#34;../pithily_sounds.m4a&#34;&gt;pithily…​ Audio&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Pocket Operator Modular 400 in eurorack</title>
      <link>http://wehrend.uber.space/posts/synth/09_eurorack_modular/</link>
      <pubDate>Sun, 21 May 2023 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/synth/09_eurorack_modular/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Also kaufte ich mir einen günstigen Eurorack-Koffer von Doepfer und ein Set Frontplatten plus Netzteil&#xA;für den Pocket Operator Modular 400 von Oddvolt, um die besagte Maschine in ein Eurorack-Modulsystem einzubauen.&#xA; Ich habe mir auch einen kleinen, aber anständigen Sequenzer gekauft, da der von Teenage Engineering nicht&#xA;nicht sehr handlich ist. Ich habe noch zwei weitere Module auf meiner Liste, das &lt;a href=&#34;https://doepfer.de/a119.htm&#34;&gt;Doepfer A-119&lt;/a&gt;,&#xA;ein Eingangsmodul, sowie das &lt;a href=&#34;https://doepfer.de/a124.htm&#34;&gt;Doepfer A-124&lt;/a&gt;, ein Wasp-Filter [natürlich die Special-Edition in&#xA;schwarz-gelb, da dies auch noch farblich passt], um das Setup zu vervollständigen.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Topics to write about - Wishlist</title>
      <link>http://wehrend.uber.space/posts/web/10_wishlist/</link>
      <pubDate>Sun, 21 May 2023 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/web/10_wishlist/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;This is a small, incomplete list of topics I’d like to write about in the mid- to far future.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;ulist&#34;&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Caches&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Interrupts&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Out-of-Order execution&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;RAW, WAR and WAW conflicts&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Filters (analog and digital)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Analog computers&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;neuronal networks&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;the macrobiom&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Religion vs. spirituality - why I prefer the latter</title>
      <link>http://wehrend.uber.space/posts/web/08_religion_spirituality/</link>
      <pubDate>Thu, 18 May 2023 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/web/08_religion_spirituality/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;What I have learned about religions and spirituality over the last years and decades boils down to one&#xA;simple statement: Religion is about right and wrong and old, outdated dogmas, while spirituality&#xA;simply says &amp;#34;It is how it is&amp;#34;. For spirituality, there is no right or wrong, only the single moment in the present&#xA;in which we dwell. I find this viewpoint quite amazing. From what I found, it leads to a more awakened state.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Why are serial interfaces everywhere - instead of parallel ones</title>
      <link>http://wehrend.uber.space/posts/web/07_serial_interfaces/</link>
      <pubDate>Thu, 18 May 2023 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/web/07_serial_interfaces/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;USB, SPI, I²C, Sata - all these interfaces is common that they are serial interfaces. Serial interfaces are todays common.&#xA;But why is that the case, especially for high-speed communication? it sounds simply counterintuitive: Parallel wires&#xA;can theoretically send more bits per time than on singular wire can.&#xA;The answer to that question is complex and multilayered. There are multiple different reasons why&#xA;serial interfaces are preferred over parallel interfaces. Lets start with the obvious ones:&#xA;The PCB routing of busses of  8, 16, 32 or even 64 bit width gets increasingly complex to route on printed circuits&#xA;boards (PCBs).The second problem, related to this, is that signal slope need to get transmitted at the same time&#xA;for all parallel lines (wires), which results in a more complex routing since edges in the strip conductor needs to be compensated.&#xA;Simply put the additional logic implemented in chips to convert the serial signal to parallel ones again (deserializer) and vice versa&#xA;(serializer) is much cheaper than the costs of complex routings.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>How does a CPU work 2? Overview</title>
      <link>http://wehrend.uber.space/pages/overview2/</link>
      <pubDate>Sun, 14 May 2023 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/pages/overview2/</guid>
      <description>&lt;div class=&#34;sect1&#34;&gt;&#xA;&lt;h2 id=&#34;_how_does_a_cpu_work_2_table_of_contents&#34;&gt;How does a CPU work 2 - Table of contents&lt;/h2&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;sect1&#34;&gt;&#xA;&lt;h2 id=&#34;_from_combinatorial_to_sequential_logic_introduction&#34;&gt;&lt;strong&gt;From Combinatorial to Sequential Logic - Introduction&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://wehrend.uber.space/docs/digital_logic_2/10_sequential_logic&#34;&gt;Introduction to Sequential Logic&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;We get from purely conmbinatorial logic circuits wihout any form of memeory to sequential logic circuits with some&#xA;type of memory (mostly flipflops)&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;sect1&#34;&gt;&#xA;&lt;h2 id=&#34;_clocksflipflops_and_registers&#34;&gt;&lt;strong&gt;Clocks,Flipflops and registers&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://wehrend.uber.space/docs/digital_logic_2/11_clocks_and_registers/&#34;&gt;Clocks,flipflops and registers&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;We make a leap into the area of sequential logic and introduce some concepts vital  for the sequential logics,&#xA;like clock, flipflops and registers&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>The Pocket Operator Modular 400 patch ideas (II)</title>
      <link>http://wehrend.uber.space/posts/synth/06_pocket_operator_modular_400/</link>
      <pubDate>Sun, 14 May 2023 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/synth/06_pocket_operator_modular_400/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;../plong_plong_plong.jpg&#34; alt=&#34;Plong…​&#34;/&gt;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;a href=&#34;../plong_plong_plong.mp4&#34;&gt;Plong…​ Video&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Mit dem Zufallsmodul können wir ein Signal vom Eingang abtasten und halten. Sein Gegenstück ist das Rauschmodul.&#xA;Wir speisen den Sägeausgang in den Eingang des Zufallsmoduls ein.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;../beep_bleep.jpg&#34; alt=&#34;Beep&#34; width=&#34;bleep…​&#34;/&gt;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;a href=&#34;../beep_bleep.mp4&#34;&gt;Beep,bleep…​ Video&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&amp;#39;&amp;#39;&amp;#39;.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;literalblock&#34;&gt;&#xA;&lt;div class=&#34;content&#34;&gt;&#xA;&lt;pre&gt;Sinus-Ausgang -&amp;gt; Lautsprecher rechts.&#xA;Hüllkurvenausgang -&amp;gt; Sinus-Taste.&#xA;LFO-Rechteck -&amp;gt; Hüllkurven-Trigger.&#xA;LFO-Rechteck -&amp;gt; Sinus fm&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;../sweeping_sinus.jpg&#34; alt=&#34;Sweeping Sinus…​&#34;/&gt;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;a href=&#34;../sweeping_sinus.mp4&#34;&gt;Sweeping Sinus…​ Video&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Wir können das Setup erweitern, indem wir den Sequenzer verwenden und den Filter nutzen. Denn  das Schöne&#xA;an modularen Synthesizern ist, dass der Filter nicht nur in Signalpfaden, sondern&#xA;auch in Steuerpfaden verwendet werden kann ;-) ..&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>10_sequential_logic</title>
      <link>http://wehrend.uber.space/docs/digital_logic_2/10_sequential_logic/</link>
      <pubDate>Mon, 01 May 2023 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/docs/digital_logic_2/10_sequential_logic/</guid>
      <description>&lt;div class=&#34;sect1&#34;&gt;&#xA;&lt;h2 id=&#34;_sequential_logic&#34;&gt;Sequential Logic&lt;/h2&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Complementary to Combinatorial logic, sequential logic contains some type of memory,&#xA;making the behaviour state-dependent. We need to feed it a clock signal.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;../images/how_does_cpu/sequential_logic.svg&#34; alt=&#34;sequential logic&#34; width=&#34;50%&#34;/&gt;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;sect2&#34;&gt;&#xA;&lt;h3 id=&#34;_mealy_and_moore_automata_synchronous&#34;&gt;Mealy and Moore Automata (synchronous)&lt;/h3&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;There are two different types of finite automata in the digital logic.&#xA;Those are:&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;olist arabic&#34;&gt;&#xA;&lt;ol class=&#34;arabic&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The mealy automata, which is dependent on the input and the state&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The moore automata, which is only dependent on the state&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;../images/how_does_cpu/mealy_logic.svg&#34; alt=&#34;mealy logic&#34; width=&#34;50%&#34;/&gt;&lt;/span&gt;&#xA;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;../images/how_does_cpu/moore_logic.svg&#34; alt=&#34;moore logic&#34; width=&#34;50%&#34;/&gt;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>The Pocket Operator Modular 400 patch ideas</title>
      <link>http://wehrend.uber.space/posts/synth/05_pocket_operator_modular_400/</link>
      <pubDate>Sat, 29 Apr 2023 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/synth/05_pocket_operator_modular_400/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Ein analoger modularer Synthesizer war schon immer mein Traum, letzte Woche habe ich mir diesen Traum erfüllt&#xA;und den Pocket Operator Modular 400 von der schwedischen Firma Teenage Engineering bestellt.&#xA;Wie bei den Möbeln der anderen beliebten schwedischen Firma muss man ihn erst selbst zusammenbauen,&#xA;bevor man damit einen Ton erzeugen kann. Das hat etwa 3 bis 4 Stunden gedauert. Aber es hat sich gelohnt.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;hr/&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Hier sind einige Patch-Ideen. Im ersten Beispiel mischen wir einfach die Ausgänge aller&#xA;3 Oszillatoren zusammen und steuern den Sinusoszillator mit dem Dreieckausgang des&#xA;LFO und die Impulsbreite des Rechteckoszillators mit dem LFO-Rechteck.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Odoo hacks: Remove Lock-Button from Odoo v12</title>
      <link>http://wehrend.uber.space/posts/web/04_odoo_hacks/</link>
      <pubDate>Sat, 22 Apr 2023 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/web/04_odoo_hacks/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Today I want to introduce a solution for a usability-problem I had in Odoo recently.&#xA;In Odoo 12 there is a lock button next to the edit / save button, and you have to click&#xA;both to (1) unlock the page and (2) make it editable. This should be done in one&#xA;step, effectively removing the locking mechanism used in the Delivery Orders (class StockPicking)&#xA;and Manufacturing Orders (class MrpProduction). The solution requires an xml and a javascript-file&#xA;as well as a dedicated web-controller. The soliution is presented below.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>X2_cordic</title>
      <link>http://wehrend.uber.space/docs/digital_logic_x/x2_cordic/</link>
      <pubDate>Sun, 26 Mar 2023 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/docs/digital_logic_x/x2_cordic/</guid>
      <description>&lt;div class=&#34;sect1&#34;&gt;&#xA;&lt;h2 id=&#34;_the_cordic_algoritm_and_direct_digital_synthesis_dds&#34;&gt;The CORDIC algoritm and direct digital synthesis (DDS)&lt;/h2&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;The CORDIC (which stands for &amp;#34;coordinate rotation digital computer&amp;#34;) algorithm, was developed in 1956 by Jack.E. Volder, to&#xA;replace the analog resolvers used for missiles navigation by digital computation on digital computer.&#xA;The algorithm turned out to be very successfull, today it can be found in every pocket calculator, doing&#xA;the computation of the trigonometrical functions sinus, cosinus and tangens. But the algorithm is not limited to that&#xA;it can also calculate logarithmic and exponential functions, given the needed modifications.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Separating blog and content</title>
      <link>http://wehrend.uber.space/posts/web/03_separate_form_and_content/</link>
      <pubDate>Sat, 04 Feb 2023 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/web/03_separate_form_and_content/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;As the blog grow bigger and after the move to odoo, I noticed a gap in the workflow,since&#xA;a blog and its content itself are different entities, I wanted to handle them as such,&#xA;that led me to a cleanup of the original source code for blog, where I moved teh content folder&#xA;into a different repo, called hugo_content, the former repo I called hugo_blog.&#xA;---&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;In my case, this means you have to clone the repo hugo_blog first&#xA;go inside the new directory (cd hugo ), checkout its branch &amp;#39;hugo&amp;#39; and then do a clone of&#xA;the repo hugo_content.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>X0_multiplication</title>
      <link>http://wehrend.uber.space/docs/digital_logic_x/x0_multiplication/</link>
      <pubDate>Sun, 24 Apr 2022 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/docs/digital_logic_x/x0_multiplication/</guid>
      <description>&lt;div class=&#34;sect1&#34;&gt;&#xA;&lt;h2 id=&#34;_multiplication_and_divsion&#34;&gt;Multiplication and Divsion&lt;/h2&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Multiplication operations can be implemented in very&#xA;different ways: Slow, as a serial operation, controlled by a&#xA;micro program or fast in dedicated hardware.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;The division is a more complex operation, and thus will be discussed&#xA;in another post.&#xA;Also for multiplication we set the scope to unsigned integer numbers.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;sect2&#34;&gt;&#xA;&lt;h3 id=&#34;_shift_left_and_shift_right&#34;&gt;Shift left and shift right&lt;/h3&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;For multipliers that are powers of two, the operation is very&#xA;simple and can be implemented via a shift left.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>00_combinatorial_logic</title>
      <link>http://wehrend.uber.space/docs/digital_logic/00_combinatorial_logic/</link>
      <pubDate>Sat, 16 Apr 2022 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/docs/digital_logic/00_combinatorial_logic/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;This course about digital logic is splitted into two big chunks:&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;olist arabic&#34;&gt;&#xA;&lt;ol class=&#34;arabic&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Combinatorial circuits (without memory elements)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Sequential circuits (with memory elements)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;../images/how_does_cpu/digital_logic.svg&#34; alt=&#34;digital logic&#34; width=&#34;500px&#34;/&gt;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;While combinatorial circuits consists of boolean gates interconnected without feedback function, sequential gates posses&#xA;a memory function,which makes them able to progress to another state.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;A combinatorial circuit can have &lt;em&gt;n&lt;/em&gt; -wide vector of inputs and an &lt;em&gt;m&lt;/em&gt; -wide vector&#xA;of outputs.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Combinatorial circuits can be described in different ways: As a formula, a circuit, a truth table or a Karnaugh map. All these descriptions are convertible into each other.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Moving to Hugo</title>
      <link>http://wehrend.uber.space/posts/web/02_moving-to-hugo/</link>
      <pubDate>Fri, 15 Apr 2022 12:17:41 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/web/02_moving-to-hugo/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Since one week my blog is build on the static-site-generator &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;.&#xA;I wanted to move to Hugo far earlier, due to the wide variety of themes.&#xA;However this required the move from Asciidoc to &lt;a href=&#34;https://asciidoctor.org/&#34;&gt;Asciidoctor&lt;/a&gt;,&#xA;and I experienced a few problems with the integration of Asciidoctor into my existing workflow.&#xA;As the approach of rendering the latex-equations in the asciidoc-documents&#xA;no longer worked, I decided to move on to client-based rendering of formulas,&#xA;like done in &lt;a href=&#34;https://gohugo.io/Katex&#34;&gt;KaTex&lt;/a&gt; and &lt;a href=&#34;https://www.mathjax.org/&#34;&gt;Mathjax&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>07_RISC-V</title>
      <link>http://wehrend.uber.space/docs/digital_logic/07_risc_v/</link>
      <pubDate>Mon, 21 Mar 2022 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/docs/digital_logic/07_risc_v/</guid>
      <description>&lt;div class=&#34;sect1&#34;&gt;&#xA;&lt;h2 id=&#34;_digital_design_meets_computer_architecture&#34;&gt;Digital design meets computer architecture&lt;/h2&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;h1 id=&#34;_risc_vs_cisc_and_the_risc_v_architecture&#34; class=&#34;sect0&#34;&gt;RISC vs CISC and The RISC-V architecture&lt;/h1&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Existing processor types can be classified by their instruction type set:&#xA;Reduced instruction set computer (RISC), Complex instruction set computer (CISC) and hybrid forms.&#xA;While mini processors like ARM for embedded systems mostly utilise reduced instruction&#xA;sets,todays workstation and Server Architectures (x86, x86_64) are hybrids of RISC and CISC.&#xA;The idea of a reduced instruction set is to avoid big complex instructions and multiple different&#xA;addressing modes (as those typically used in x86 architectures).&#xA;Advantages of a RISC architecture are shorter pipelines which allows faster clocking.&#xA;RISC architectures follow a simple scheme: &amp;#39;Fetch → Decode → Fetch Operands → Execute → Write Back&amp;#39;&#xA;Also instructions have a constant length, memory operations are divided from arithmetic operations,&#xA;which is known as Load/Store-architecture. RISC-V is an open standard for the instruction set archtitecture (ISA).&#xA;Most of this post is referenced from the popular book Computer Organization and Design (RISC-V) Edition by Hennessey and Patterson.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>06_Memory</title>
      <link>http://wehrend.uber.space/docs/digital_logic/06_memory/</link>
      <pubDate>Sun, 20 Mar 2022 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/docs/digital_logic/06_memory/</guid>
      <description>&lt;div class=&#34;sect1&#34;&gt;&#xA;&lt;h2 id=&#34;_memory_organization&#34;&gt;Memory Organization&lt;/h2&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;In this blog post the author will introduce the different&#xA;types of semiconductor memory. This is a wide field,&#xA;so the goal here is to focus on the most important ones&#xA;and draw the differences between the different types.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;sect2&#34;&gt;&#xA;&lt;h3 id=&#34;_the_memory_hierarchy&#34;&gt;The Memory hierarchy&lt;/h3&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;As in computing all is about performance, we first have a look&#xA;at the memory hierarchy. As you can see in the pyramid below, memory is&#xA;ordered in layers. The slowest elements -also the ones with highest&#xA;latency - are at the bottom of this pyramid, while the fastest ones are&#xA;shown at the apex.&#xA;Imagine your desk is the actual CPU, with an open book laying in front of your&#xA;eyes. This is the register. Now you read in this book a reference to another book&#xA;in your bookshelf. Your bookshelf is the cache here. The cache itself is again layered.&#xA;Lets say L1-cache is the bookshelf in your room, L2-cache the bookshelf in another room&#xA;and L3-cache books stored in a box in the same room. If you now have a reference&#xA;in your current book (the one on your desk), that refers to a book you do not possess, you need to&#xA;go to the public library. The public library is your RAM. The access times are really high.&#xA;And lets say the book you need is also not available there, and they must order it from a library&#xA;in another city. Then you got to the level at the bottom, which is the disk storage unit.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>11_Clocks_flipflops_and_registers</title>
      <link>http://wehrend.uber.space/docs/digital_logic_2/11_clocks_and_registers/</link>
      <pubDate>Sat, 12 Mar 2022 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/docs/digital_logic_2/11_clocks_and_registers/</guid>
      <description>&lt;div class=&#34;sect1&#34;&gt;&#xA;&lt;h2 id=&#34;_clocks_flipflops_and_registers&#34;&gt;Clocks, Flipflops and registers&lt;/h2&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;In this blog post the author will introduce multiple elements needed at a later&#xA;stage.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;sect2&#34;&gt;&#xA;&lt;h3 id=&#34;_register_transfer_level_needs_a_clock_source&#34;&gt;Register-Transfer-Level needs a clock source&lt;/h3&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;As for now we only learned about combinatiorial logic, which works&#xA;without any clock source - every signal is just delayed by the&#xA;time it needs to travel through the circuit. This is known as asynchronous.&#xA;But for more sophisticated tasks, sequential circuits, having registers&#xA;storing the input and output signals are necessary&#xA;to get correct results. This is known as synchronous.&#xA;Most, if not all designs used nowadays are synchronous,&#xA;due to a lower design complexity.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>05_ALU</title>
      <link>http://wehrend.uber.space/docs/digital_logic/05_alu/</link>
      <pubDate>Fri, 11 Mar 2022 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/docs/digital_logic/05_alu/</guid>
      <description>&lt;div class=&#34;sect1&#34;&gt;&#xA;&lt;h2 id=&#34;_the_alu_the_swiss_knife_of_every_cpu&#34;&gt;The ALU, the swiss knife of every cpu&lt;/h2&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Today the author wants to introduce an important part of every cpu:&#xA;The arithmetic logic unit (ALU), we already know about some functions&#xA;presented in the blog posts before. In this post we want to close the&#xA;gaps systematically.&#xA;Time for a short recap: The logic functions &amp;#39;and&amp;#39;,&amp;#39;or&amp;#39;,&amp;#39;not&amp;#39; and &amp;#39;xor&amp;#39;&#xA;were introduced, also the arithmetic functions &amp;#39;add&amp;#39; and &amp;#39;sub&amp;#39; for integers&#xA;were shown. Now we want to build most of those functionalities in one unit,&#xA;the 1-bit alu cell.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>04_Signs</title>
      <link>http://wehrend.uber.space/docs/digital_logic/04_signs/</link>
      <pubDate>Sun, 06 Feb 2022 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/docs/digital_logic/04_signs/</guid>
      <description>&lt;div class=&#34;sect1&#34;&gt;&#xA;&lt;h2 id=&#34;_extending_the_binary_system&#34;&gt;Extending the binary system&lt;/h2&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;While in the previous blog post about addition,&#xA;the binary numbers had only one interpretation,&#xA;we extend the system here to include negative (integer)&#xA;numbers.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;../images/how_does_cpu/binary_system.svg&#34; alt=&#34;binary system&#34; width=&#34;50%&#34;/&gt;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;The simplest approach we can think of is to use the most significant bit (MSB)&#xA;as sign bit, where &amp;#39;0&amp;#39; ist intepreted as sign &amp;#39;+&amp;#39; and &amp;#39;1&amp;#39; is interpreted as &amp;#39;-&amp;#39;.&#xA;However as we see in the following calculation this does not work as expected:&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>03_binary_system</title>
      <link>http://wehrend.uber.space/docs/digital_logic/03_binary_system/</link>
      <pubDate>Thu, 02 Dec 2021 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/docs/digital_logic/03_binary_system/</guid>
      <description>&lt;div class=&#34;sect1&#34;&gt;&#xA;&lt;h2 id=&#34;_the_binary_system&#34;&gt;The Binary System&lt;/h2&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;All computer we act with on a daily base do not know about the decimal system we are using, based on the ten digits at our hands.&#xA;All they know about are the states &lt;code&gt;on&lt;/code&gt; and &lt;code&gt;off&lt;/code&gt;. We build an imaginary circuit with a power source a control light - here an LED (Light Emitting Diode)  - and a switch,&#xA;closing the connection let the light flash. An off light counts as zero, and on light counts as one. Simple as it.We switch the light on&#xA;and get a one.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>02_XOR</title>
      <link>http://wehrend.uber.space/docs/digital_logic/02_xor/</link>
      <pubDate>Mon, 08 Nov 2021 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/docs/digital_logic/02_xor/</guid>
      <description>&lt;div class=&#34;sect1&#34;&gt;&#xA;&lt;h2 id=&#34;_xor&#34;&gt;XOR&lt;/h2&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;As there are a lot of important applications for the exclusive-or (XOR) operation&#xA;it is dedicated an own blog post. Two of the most important are:&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;ulist&#34;&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;XOR operations are often used in a Linear Feedback Shift Registers (LFSR).&#xA;LFSR are a crucial step  in scrambler / descrambler respectively,&#xA;which are used in transmitters / receivers&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Part of an encryption algorithmus&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Last but not least an important part of a halfadder.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Prequel: Introduction to electronics</title>
      <link>http://wehrend.uber.space/pages/prequel-short-introduction-to-electronics/</link>
      <pubDate>Sat, 23 Jan 2021 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/pages/prequel-short-introduction-to-electronics/</guid>
      <description>&lt;div id=&#34;preamble&#34;&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&lt;hr/&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;While I was about to write the implementation part of the boolean algebra post, the basic logic&#xA;gates, the writing process got quickly out of hand and I caught myself to write more about less connected&#xA;topics like explaining basic electronic components and their implementation on silicon than the actual content,&#xA;here shall be the place for those excursions. This is not meant to be a complete reference more a supplement to&#xA;existing literature.&#xA;&amp;#39;&amp;#39;&amp;#39;&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>01_boolean_algebra</title>
      <link>http://wehrend.uber.space/docs/digital_logic/01_boolean_algebra/</link>
      <pubDate>Wed, 23 Dec 2020 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/docs/digital_logic/01_boolean_algebra/</guid>
      <description>&lt;div class=&#34;sect1&#34;&gt;&#xA;&lt;h2 id=&#34;_boolean_algebra_and_basic_logic_gates&#34;&gt;Boolean Algebra and Basic Logic Gates&lt;/h2&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;We are starting (the journey) with three very&#xA;basic logic functions (or operations), which despite their simplicity&#xA;already are valid instructions of a regular CPU:&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;strong&gt;NOT, AND and OR&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Logical functions - also called operations, the author will use both terms interchangebly here -&#xA;can be described in various ways, most often it is described implicit&#xA;as boolean equation, but it can also be explained explicit in a truth table.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>How does a CPU work? Overview</title>
      <link>http://wehrend.uber.space/pages/overview/</link>
      <pubDate>Sun, 20 Dec 2020 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/pages/overview/</guid>
      <description>&lt;div class=&#34;sect1&#34;&gt;&#xA;&lt;h2 id=&#34;_how_does_a_cpu_work_table_of_contents&#34;&gt;How does a CPU work - Table of contents&lt;/h2&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;sect1&#34;&gt;&#xA;&lt;h2 id=&#34;_introduction_and_overview&#34;&gt;&lt;strong&gt;Introduction and overview&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;em&gt;Introduction and overview&lt;/em&gt;&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Every topic of this course is broken up into two parts:&#xA;A part about the mathematical side of digital logic,&#xA;ideally almost independent from implementation details&#xA;and a more concrete part handling this very details.&#xA;In the concrete part we will mostly discuss the implementation&#xA;on an electrical layer, though there are still other solutions&#xA;possible based on &lt;a href=&#34;https://erik-engheim.medium.com/microprocessors-running-on-air-a47a702dd41f&#34;&gt;fluid dynamics&lt;/a&gt;,&#xA;or &lt;a href=&#34;https://www.photonics.com/Articles/All-Optical_Logic_Gates_Show_Promise_for_Optical/a63226&#34;&gt;optical gates&lt;/a&gt;,&#xA;most computers and logic gates are still based on electronics and semiconductor technology and this will not&#xA;change with &lt;a href=&#34;https://www.azom.com/article.aspx?ArticleID=17173&#34;&gt;quantum computing&lt;/a&gt;, which is mostly tied to / adjunct to&#xA;probability theory. However with quantum computing&#xA;the fundamentals behind which the author describes here will completly change.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>About</title>
      <link>http://wehrend.uber.space/about/</link>
      <pubDate>Sat, 12 Dec 2020 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/about/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;A simple static blog meant for writing about topics like electronics &amp;amp; computation and - maybe - philosophy.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;hr/&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Dear reader of my humble blog , I am Sven Wehrend, a scanner personality born 1987,&#xA;interested in a wide range of different topics reaching from technology over psychology to spirituality.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;I studied Computer Engineering at the HTW Berlin (Bachelor) and TU Berlin (Master).&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;hr/&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;legal notice and address:&#xA;Sven Wehrend&#xA;Eythstrasse 20&#xA;12105 Berlin&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Setting up a static blog with Nikola</title>
      <link>http://wehrend.uber.space/posts/web/00_setting_up_nikola/</link>
      <pubDate>Sat, 12 Dec 2020 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/web/00_setting_up_nikola/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;I picked up Nikola some months ago as I was searching for a simple static-site-generator to setup a blog with minimal effort.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;To make things a bit more interesting and at the same time easier we will use Nikola in a Docker container.&#xA;So I require an almost basic understanding for Docker here.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;First create a directory on our host system, where you want the files stored, e.g. &amp;#39;blog&amp;#39; in your home directory.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Writing about math with Asciidoc</title>
      <link>http://wehrend.uber.space/posts/web/01_writing-about-math-with-asciidoc/</link>
      <pubDate>Sat, 12 Dec 2020 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/posts/web/01_writing-about-math-with-asciidoc/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;While drafting a blog post, part of a series of posts intended to be published in the future,&#xA;I discovered a lack of my tooling in Nikola. When adding mathematical formulas,&#xA;I realized that there is no default-way of rendering images from those math formulas,&#xA;and inserting them as image-tags into the html. Instead math formulas are handled via JS, which I try&#xA;to reduce to an absolute minimum on my site.&#xA;So I started to implement a rather quick-and-dirty plugin to do exactly this transformation, using&#xA;latex and dvipng or dvisvgm.&#xA;Then I come across &lt;a href=&#34;https://erikwinter.nl/articles/2020/why-i-built-my-own-shitty-static-site-generator/&#34;&gt;this blog post&lt;/a&gt;&#xA;where reading about &lt;a href=&#34;https://asciidoc.org/&#34;&gt;asciidoc&lt;/a&gt; written in python and its successor &lt;a href=&#34;https://asciidoctor.org/&#34;&gt;asciidoctor&lt;/a&gt; written&#xA;in ruby supporting different display formats. Ideal for the content I had in mind. So I installed the Nikola plugin asciidoc&#xA;(which is mostly a wrapper to the asciidoc binary called as a subprocess), via&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://wehrend.uber.space/docs/digital_logic/agenda2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/docs/digital_logic/agenda2/</guid>
      <description>&lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;&#xA;&lt;!DOCTYPE html PUBLIC &#34;-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN&#34; &#34;http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd&#34;&gt;&lt;html xmlns=&#34;http://www.w3.org/1999/xhtml&#34;&gt;&lt;!--This file was converted to xhtml by LibreOffice - see https://cgit.freedesktop.org/libreoffice/core/tree/filter/source/xslt for the code.--&gt;&lt;head profile=&#34;http://dublincore.org/documents/dcmi-terms/&#34;&gt;&lt;meta http-equiv=&#34;Content-Type&#34; content=&#34;application/xhtml+xml; charset=utf-8&#34;/&gt;&lt;title xml:lang=&#34;en-US&#34;&gt;- no title specified&lt;/title&gt;&lt;meta name=&#34;DCTERMS.title&#34; content=&#34;&#34; xml:lang=&#34;en-US&#34;/&gt;&lt;meta name=&#34;DCTERMS.language&#34; content=&#34;en-US&#34; scheme=&#34;DCTERMS.RFC4646&#34;/&gt;&lt;meta name=&#34;DCTERMS.source&#34; content=&#34;http://xml.openoffice.org/odf2xhtml&#34;/&gt;&lt;meta name=&#34;DCTERMS.issued&#34; content=&#34;2022-04-15T18:22:57.383394805&#34; scheme=&#34;DCTERMS.W3CDTF&#34;/&gt;&lt;meta name=&#34;DCTERMS.modified&#34; content=&#34;2023-03-18T15:25:00.926735488&#34; scheme=&#34;DCTERMS.W3CDTF&#34;/&gt;&lt;meta name=&#34;DCTERMS.provenance&#34; content=&#34;&#34; xml:lang=&#34;en-US&#34;/&gt;&lt;meta name=&#34;DCTERMS.subject&#34; content=&#34;,&#34; xml:lang=&#34;en-US&#34;/&gt;&lt;link rel=&#34;schema.DC&#34; href=&#34;http://purl.org/dc/elements/1.1/&#34; hreflang=&#34;en&#34;/&gt;&lt;link rel=&#34;schema.DCTERMS&#34; href=&#34;http://purl.org/dc/terms/&#34; hreflang=&#34;en&#34;/&gt;&lt;link rel=&#34;schema.DCTYPE&#34; href=&#34;http://purl.org/dc/dcmitype/&#34; hreflang=&#34;en&#34;/&gt;&lt;link rel=&#34;schema.DCAM&#34; href=&#34;http://purl.org/dc/dcam/&#34; hreflang=&#34;en&#34;/&gt;&lt;style type=&#34;text/css&#34;&gt;&#xA;    @page {  }&#xA;    table { border-collapse:collapse; border-spacing:0; empty-cells:show }&#xA;    td, th { vertical-align:top; font-size:10pt;}&#xA;    h1, h2, h3, h4, h5, h6 { clear:both;}&#xA;    p { white-space: nowrap; }&#xA;    ol, ul { margin:0; padding:0;}&#xA;    li { list-style: none; margin:0; padding:0;}&#xA;    /* &#34;li span.odfLiEnd&#34; - IE 7 issue*/&#xA;    li span. { clear: both; line-height:0; width:0; height:0; margin:0; padding:0; }&#xA;    span.footnodeNumber { padding-right:1em; }&#xA;    span.annotation_style_by_filter { font-size:95%; font-family:Arial; background-color:#fff000;  margin:0; border:0; padding:0;  }&#xA;    span.heading_numbering { margin-right: 0.8rem; }* { margin:0;}&#xA;    .ta1 { writing-mode:horizontal-tb; direction:ltr; }&#xA;    .Default { font-family:Liberation Sans; }&#xA;    .ce1 { font-family:Liberation Sans; font-weight:bold; }&#xA;    .ce11 { font-family:Liberation Sans; background-color:#729fcf; color:#666666; font-weight:bold; }&#xA;    .ce12 { font-family:Liberation Sans; background-color:#729fcf; color:#666666; }&#xA;    .ce13 { font-family:Liberation Sans; background-color:#ffff00; color:#666666; font-weight:bold; }&#xA;    .ce14 { font-family:Liberation Sans; background-color:#ffff00; color:#666666; }&#xA;    .ce15 { font-family:Liberation Sans; background-color:#c9211e; color:#666666; font-weight:bold; }&#xA;    .ce16 { font-family:Liberation Sans; background-color:#c9211e; color:#666666; }&#xA;    .ce17 { font-family:Liberation Sans; background-color:#00a933; color:#666666; font-weight:bold; }&#xA;    .ce18 { font-family:Liberation Sans; background-color:#00a933; color:#666666; }&#xA;    .ce2 { font-family:Liberation Sans; background-color:#00a933; font-weight:bold; }&#xA;    .ce3 { font-family:Liberation Sans; background-color:#00a933; }&#xA;    .ce7 { font-family:Liberation Sans; background-color:#00a933; color:#000000; }&#xA;    .co1 { width:1.6598in; }&#xA;    .co2 { width:2.1283in; }&#xA;    .co3 { width:0.889in; }&#xA;    .ro1 { height:0.178in; }&#xA;    .T1 { font-size:10pt; font-weight:normal; text-decoration:none ! important; font-style:normal; text-shadow:none; font-family:Liberation Sans; }&#xA;    /* ODF styles with no properties representable as CSS */&#xA;     { }&#xA;    &lt;/style&gt;&lt;/head&gt;&lt;body dir=&#34;ltr&#34;&gt;&lt;table border=&#34;0&#34; cellspacing=&#34;0&#34; cellpadding=&#34;0&#34; class=&#34;ta1&#34;&gt;&lt;colgroup&gt;&lt;col width=&#34;184&#34;/&gt;&lt;col width=&#34;236&#34;/&gt;&lt;col width=&#34;99&#34;/&gt;&lt;/colgroup&gt;&lt;tr class=&#34;ro1&#34;&gt;&lt;td style=&#34;text-align:left;width:1.6598in; &#34; class=&#34;Default&#34;&gt; &lt;/td&gt;&lt;td style=&#34;text-align:left;width:2.1283in; &#34; class=&#34;Default&#34;&gt; &lt;/td&gt;&lt;td style=&#34;text-align:left;width:0.889in; &#34; class=&#34;Default&#34;&gt; &lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;ro1&#34;&gt;&lt;td style=&#34;text-align:left;width:1.6598in; &#34; class=&#34;Default&#34;&gt; &lt;/td&gt;&lt;td style=&#34;text-align:left;width:2.1283in; &#34; class=&#34;Default&#34;&gt; &lt;/td&gt;&lt;td style=&#34;text-align:left;width:0.889in; &#34; class=&#34;Default&#34;&gt; &lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;ro1&#34;&gt;&lt;td style=&#34;text-align:left;width:1.6598in; &#34; class=&#34;ce2&#34;&gt;&lt;p&gt;Combinatorial Logic&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://wehrend.uber.space/docs/digital_logic/agenda3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/docs/digital_logic/agenda3/</guid>
      <description>&lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;&#xA;&lt;!DOCTYPE html PUBLIC &#34;-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN&#34;&#xA;        &#34;http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd&#34;&gt;&#xA;&lt;html xmlns=&#34;http://www.w3.org/1999/xhtml&#34;&gt;&#xA;&lt;!--This file was converted to xhtml by LibreOffice - see https://cgit.freedesktop.org/libreoffice/core/tree/filter/source/xslt for the code.--&gt;&#xA;&lt;head profile=&#34;http://dublincore.org/documents/dcmi-terms/&#34;&gt;&#xA;    &lt;meta http-equiv=&#34;Content-Type&#34; content=&#34;application/xhtml+xml; charset=utf-8&#34;/&gt;&#xA;    &lt;title xml:lang=&#34;en-US&#34;&gt;- no title specified&lt;/title&gt;&#xA;    &lt;meta name=&#34;DCTERMS.title&#34; content=&#34;&#34; xml:lang=&#34;en-US&#34;/&gt;&#xA;    &lt;meta name=&#34;DCTERMS.language&#34; content=&#34;en-US&#34; scheme=&#34;DCTERMS.RFC4646&#34;/&gt;&#xA;    &lt;meta name=&#34;DCTERMS.source&#34; content=&#34;http://xml.openoffice.org/odf2xhtml&#34;/&gt;&#xA;    &lt;meta name=&#34;DCTERMS.issued&#34; content=&#34;2022-04-15T18:22:57.383394805&#34; scheme=&#34;DCTERMS.W3CDTF&#34;/&gt;&#xA;    &lt;meta name=&#34;DCTERMS.modified&#34; content=&#34;2023-04-22T14:56:22.387538699&#34; scheme=&#34;DCTERMS.W3CDTF&#34;/&gt;&#xA;    &lt;meta name=&#34;DCTERMS.provenance&#34; content=&#34;&#34; xml:lang=&#34;en-US&#34;/&gt;&#xA;    &lt;meta name=&#34;DCTERMS.subject&#34; content=&#34;,&#34; xml:lang=&#34;en-US&#34;/&gt;&#xA;    &lt;link rel=&#34;schema.DC&#34; href=&#34;http://purl.org/dc/elements/1.1/&#34; hreflang=&#34;en&#34;/&gt;&#xA;    &lt;link rel=&#34;schema.DCTERMS&#34; href=&#34;http://purl.org/dc/terms/&#34; hreflang=&#34;en&#34;/&gt;&#xA;    &lt;link rel=&#34;schema.DCTYPE&#34; href=&#34;http://purl.org/dc/dcmitype/&#34; hreflang=&#34;en&#34;/&gt;&#xA;    &lt;link rel=&#34;schema.DCAM&#34; href=&#34;http://purl.org/dc/dcam/&#34; hreflang=&#34;en&#34;/&gt;&#xA;    &lt;style type=&#34;text/css&#34;&gt;&#xA;    @page {  }&#xA;    table { border-collapse:collapse; border-spacing:0; empty-cells:show }&#xA;    td, th { vertical-align:top; font-size:10pt;}&#xA;    h1, h2, h3, h4, h5, h6 { clear:both;}&#xA;    p { white-space: nowrap; }&#xA;    ol, ul { margin:0; padding:0;}&#xA;    li { list-style: none; margin:0; padding:0;}&#xA;    /* &#34;li span.odfLiEnd&#34; - IE 7 issue*/&#xA;    li span. { clear: both; line-height:0; width:0; height:0; margin:0; padding:0; }&#xA;    span.footnodeNumber { padding-right:1em; }&#xA;    span.annotation_style_by_filter { font-size:95%; font-family:Arial; background-color:#fff000;  margin:0; border:0; padding:0;  }&#xA;    span.heading_numbering { margin-right: 0.8rem; }* { margin:0;}&#xA;    .ta1 { writing-mode:horizontal-tb; direction:ltr; }&#xA;    .Default { font-family:Liberation Sans; }&#xA;    .ce1 { font-family:Liberation Sans; font-weight:bold; }&#xA;    .ce11 { font-family:Liberation Sans; background-color:#729fcf; color:#666666; font-weight:bold; }&#xA;    .ce12 { font-family:Liberation Sans; background-color:#729fcf; color:#666666; }&#xA;    .ce13 { font-family:Liberation Sans; background-color:#ffff00; color:#666666; font-weight:bold; }&#xA;    .ce14 { font-family:Liberation Sans; background-color:#ffff00; color:#666666; }&#xA;    .ce15 { font-family:Liberation Sans; background-color:#c9211e; color:#666666; font-weight:bold; }&#xA;    .ce16 { font-family:Liberation Sans; background-color:#c9211e; color:#666666; }&#xA;    .ce18 { font-family:Liberation Sans; background-color:#00a933; color:#666666; }&#xA;    .ce2 { font-family:Liberation Sans; background-color:#00a933; font-weight:bold; }&#xA;    .ce22 { font-family:Liberation Sans; background-color:#00a933; color:#000000; font-weight:bold; }&#xA;    .ce3 { font-family:Liberation Sans; background-color:#00a933; }&#xA;    .ce7 { font-family:Liberation Sans; background-color:#00a933; color:#000000; }&#xA;    .co1 { width:1.6598in; }&#xA;    .co2 { width:2.1283in; }&#xA;    .co3 { width:0.889in; }&#xA;    .ro1 { height:0.178in; }&#xA;    .T1 { font-size:10pt; font-weight:normal; text-decoration:none ! important; font-style:normal; text-shadow:none; font-family:Liberation Sans; }&#xA;    /* ODF styles with no properties representable as CSS */&#xA;     { }&#xA;&#xA;    &lt;/style&gt;&#xA;&lt;/head&gt;&#xA;&lt;body dir=&#34;ltr&#34;&gt;&#xA;&lt;table border=&#34;0&#34; cellspacing=&#34;0&#34; cellpadding=&#34;0&#34; class=&#34;ta1&#34;&gt;&#xA;    &lt;colgroup&gt;&#xA;        &lt;col width=&#34;184&#34;/&gt;&#xA;        &lt;col width=&#34;236&#34;/&gt;&#xA;        &lt;col width=&#34;99&#34;/&gt;&#xA;    &lt;/colgroup&gt;&#xA;    &lt;tr class=&#34;ro1&#34;&gt;&#xA;        &lt;td style=&#34;text-align:left;width:1.6598in; &#34; class=&#34;Default&#34;&gt; &lt;/td&gt;&#xA;        &lt;td style=&#34;text-align:left;width:2.1283in; &#34; class=&#34;Default&#34;&gt; &lt;/td&gt;&#xA;        &lt;td style=&#34;text-align:left;width:0.889in; &#34; class=&#34;Default&#34;&gt; &lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr class=&#34;ro1&#34;&gt;&#xA;        &lt;td style=&#34;text-align:left;width:1.6598in; &#34; class=&#34;Default&#34;&gt; &lt;/td&gt;&#xA;        &lt;td style=&#34;text-align:left;width:2.1283in; &#34; class=&#34;Default&#34;&gt; &lt;/td&gt;&#xA;        &lt;td style=&#34;text-align:left;width:0.889in; &#34; class=&#34;Default&#34;&gt; &lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr class=&#34;ro1&#34;&gt;&#xA;        &lt;td style=&#34;text-align:left;width:1.6598in; &#34; class=&#34;ce2&#34;&gt;&lt;p&gt;Combinatorial Logic&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://wehrend.uber.space/drafts/alu2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/drafts/alu2/</guid>
      <description>&lt;div class=&#34;olist loweralpha&#34;&gt;&#xA;&lt;ol class=&#34;loweralpha&#34; type=&#34;a&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;title: How does a CPU work? The swiss knife (Part II)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;slug: how-does-a-cpu-work-alu-2&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;date: 2022-02-09&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;category:&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;link:&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;description:&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;type: text&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;sect1&#34;&gt;&#xA;&lt;h2 id=&#34;_alu_arithmetic_logic_unit&#34;&gt;ALU (Arithmetic Logic Unit)&lt;/h2&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&lt;div class=&#34;sect2&#34;&gt;&#xA;&lt;h3 id=&#34;_instruction_table&#34;&gt;Instruction table&lt;/h3&gt;&#xA;&lt;table class=&#34;tableblock frame-all grid-all stretch&#34;&gt;&#xA;&lt;colgroup&gt;&#xA;&lt;col style=&#34;width: 25%;&#34;/&gt;&#xA;&lt;col style=&#34;width: 25%;&#34;/&gt;&#xA;&lt;col style=&#34;width: 25%;&#34;/&gt;&#xA;&lt;col style=&#34;width: 25%;&#34;/&gt;&#xA;&lt;/colgroup&gt;&#xA;&lt;thead&gt;&#xA;&lt;tr&gt;&#xA;&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;logic operations&lt;/th&gt;&#xA;&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;description&lt;/th&gt;&#xA;&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;implementation&lt;/th&gt;&#xA;&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;data type / size&lt;/th&gt;&#xA;&lt;/tr&gt;&#xA;&lt;/thead&gt;&#xA;&lt;tbody&gt;&#xA;&lt;tr&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;and&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;basic boolean Op&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;bit&lt;/p&gt;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;or&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;basic boolean Op&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;bit&lt;/p&gt;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;not&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;basic boolean Op&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;bit&lt;/p&gt;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;xor&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;complex boolean Op&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;bit&lt;/p&gt;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;shl&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;shift left&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;various&lt;/p&gt;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;shr&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;shift right&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;various&lt;/p&gt;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;table class=&#34;tableblock frame-all grid-all stretch&#34;&gt;&#xA;&lt;colgroup&gt;&#xA;&lt;col style=&#34;width: 33.3333%;&#34;/&gt;&#xA;&lt;col style=&#34;width: 33.3333%;&#34;/&gt;&#xA;&lt;col style=&#34;width: 33.3334%;&#34;/&gt;&#xA;&lt;/colgroup&gt;&#xA;&lt;thead&gt;&#xA;&lt;tr&gt;&#xA;&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;control instructions&lt;/th&gt;&#xA;&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;description&lt;/th&gt;&#xA;&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;data type / size&lt;/th&gt;&#xA;&lt;/tr&gt;&#xA;&lt;/thead&gt;&#xA;&lt;tbody&gt;&#xA;&lt;tr&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;ld&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;load&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;various&lt;/p&gt;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;st&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;store&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;various&lt;/p&gt;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;jx&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;jump (x= gt,eq, lt )&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;various&lt;/p&gt;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;table class=&#34;tableblock frame-all grid-all stretch&#34;&gt;&#xA;&lt;colgroup&gt;&#xA;&lt;col style=&#34;width: 25%;&#34;/&gt;&#xA;&lt;col style=&#34;width: 25%;&#34;/&gt;&#xA;&lt;col style=&#34;width: 25%;&#34;/&gt;&#xA;&lt;col style=&#34;width: 25%;&#34;/&gt;&#xA;&lt;/colgroup&gt;&#xA;&lt;thead&gt;&#xA;&lt;tr&gt;&#xA;&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;arithmetic operations&lt;/th&gt;&#xA;&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;description&lt;/th&gt;&#xA;&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;implementation&lt;/th&gt;&#xA;&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;data type / size&lt;/th&gt;&#xA;&lt;/tr&gt;&#xA;&lt;/thead&gt;&#xA;&lt;tbody&gt;&#xA;&lt;tr&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;ashl&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;arithmetic shift left&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;various&lt;/p&gt;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;ashr&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;arithmetic shift right&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;various&lt;/p&gt;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;inc&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;increment&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;various&lt;/p&gt;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;dec&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;decrement&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;various&lt;/p&gt;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;add&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;addition&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;(u) integer&lt;/p&gt;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;sub&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;subtraction&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;-&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;(u) integer&lt;/p&gt;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;mul&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;multiplication&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;software-routine or HW&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;(u)integer&lt;/p&gt;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;div&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;division&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;software-routine or HW&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;(u)integer&lt;/p&gt;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;sin&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;sine&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;software-routine (Cordic)&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;(u) integer&lt;/p&gt;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;cos&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;cosine&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;software-routine (Cordic)&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;(u) integer&lt;/p&gt;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;tan&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;tangens&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;software-routine (Cordic)&lt;/p&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;(u) integer&lt;/p&gt;&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Digital Logic 2</title>
      <link>http://wehrend.uber.space/docs/digital_logic_2/images/how_does_cpu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://wehrend.uber.space/docs/digital_logic_2/images/how_does_cpu/</guid>
      <description></description>
    </item>
  </channel>
</rss>
